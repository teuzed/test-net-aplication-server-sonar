name: Build & SonarQube Analysis

on:
  workflow_dispatch:

jobs:
  build:
    name: Build, Test & Analyze
    runs-on: self-hosted   # ðŸ‘ˆ tu runner Windows en GCP

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17 (required for SonarQube)
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          install-dir: C:\runners\dotnet

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: SonarQube - Begin analysis
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"mycompany.my-solution" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"

      - name: Restore dependencies
        run: dotnet restore my-solution.sln
        shell: pwsh

      - name: Build solution
        run: dotnet build my-solution.sln --no-restore --configuration Release
        shell: pwsh

      - name: Run tests with coverage
        run: |
          dotnet test my-solution.sln `
            --no-build --configuration Release `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=./TestResults/coverage
        shell: pwsh

      - name: SonarQube - End analysis
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
